/* Alerts panel logic (threshold alerts MVP) */
(function(global){
  'use strict';
  const C = global.AiotCommon || {};
  let enabled=true; let interval=null; const REFRESH_MS=15000; let loading=false;
  function id(x){ return document.getElementById(x); }
  function init(){ const summary=id('alertSummary'); const panel=id('alertPanel'); if(!summary||!panel) return; fetch('/data/api/alerts/meta').then(r=>r.json()).then(meta=>{ if(meta && meta.enabled===false){ enabled=false; summary.style.display='none'; panel.style.display='none'; return; } enabled=true; summary.style.display='flex'; fetchAlerts(true); if(interval) clearInterval(interval); interval=setInterval(fetchAlerts, REFRESH_MS); }).catch(()=>{ fetchAlerts(true); }); const btn=id('alertRefreshBtn'); if(btn){ btn.addEventListener('click',()=>fetchAlerts(true)); }
  }
  function fetchAlerts(force){ if(!enabled) return; if(loading && !force) return; loading=true; fetch('/data/api/alerts').then(r=>r.json()).then(list=>{ render(Array.isArray(list)?list:[]); }).catch(err=>{ console.warn('预警获取失败',err); render([], '加载失败'); }).finally(()=>{ loading=false; }); }
  function render(list, error){ const summary=id('alertSummary'); const count=id('alertActiveCount'); const panel=id('alertPanel'); const wrap=id('alertList'); const refreshBtn=id('alertRefreshBtn'); if(!summary||!count||!panel||!wrap) return; if(error){ count.textContent='预警加载失败'; summary.classList.add('empty'); panel.style.display='none'; if(refreshBtn) refreshBtn.style.display='inline-flex'; return; }
    const active=list.filter(a=>!a.acknowledged && !a.ignored); if(!active.length){ count.textContent='无活跃预警'; summary.classList.add('empty'); wrap.innerHTML=''; panel.style.display='none'; if(refreshBtn) refreshBtn.style.display='none'; return; }
    summary.classList.remove('empty'); count.textContent='活跃预警: '+active.length+' 条'; if(refreshBtn) refreshBtn.style.display='inline-flex'; panel.style.display='block'; wrap.innerHTML=active.map(cardHtml).join(''); bindCardEvents(); }
  function cardHtml(a){ const th=isFinite(a.thresholdValue)?Number(a.thresholdValue).toFixed(2):'--'; const av=isFinite(a.actualValue)?Number(a.actualValue).toFixed(2):'--'; const msg=(a.message||('预警 #'+a.id)); const sev=(a.severity||'MEDIUM'); const ts=formatTs(a.createdAt); return `<div class='alert-card severity-${sev}' data-alert-id='${a.id}'><div class='ac-head'><span class='ac-badge'>${sev}</span><span class='ac-time'>${ts}</span></div><div class='ac-msg'>${msg}</div><div class='ac-values'>阈值: <strong>${th}</strong> | 当前: <strong>${av}</strong></div><div class='ac-actions'><button type='button' class='btn-icon ok' title='确认预警' aria-label='确认预警'><svg viewBox='0 0 24 24'><path d='M5 13l4 4L19 7' stroke-linecap='round' stroke-linejoin='round'/></svg></button><button type='button' class='btn-icon danger' title='忽略预警' aria-label='忽略预警'><svg viewBox='0 0 24 24'><path d='M6 6l12 12M18 6l-12 12' stroke-linecap='round' stroke-linejoin='round'/></svg></button></div></div>`; }
  function formatTs(ts){ try { const d=new Date(ts); if(!isFinite(d.getTime())) return ''; return d.getHours().toString().padStart(2,'0')+':'+d.getMinutes().toString().padStart(2,'0')+':'+d.getSeconds().toString().padStart(2,'0'); } catch(e){ return ''; } }
  function bindCardEvents(){ document.querySelectorAll('.alert-card').forEach(card=>{ if(card._bound) return; card._bound=true; const id=card.getAttribute('data-alert-id'); const okBtn=card.querySelector('.btn-icon.ok'); const igBtn=card.querySelector('.btn-icon.danger'); if(okBtn) okBtn.addEventListener('click',()=>ackAlert(id,okBtn)); if(igBtn) igBtn.addEventListener('click',()=>ignoreAlert(id,igBtn)); card.tabIndex=0; card.addEventListener('keydown',e=>{ if(e.key==='Enter'){ ackAlert(id,okBtn); } else if(e.key==='Delete'){ ignoreAlert(id,igBtn); } }); }); }
  function ackAlert(id, btn){ if(!id) return; const card=document.querySelector(`.alert-card[data-alert-id='${id}']`); if(card) card.classList.add('processing'); if(btn) btn.disabled=true; fetch(`/data/api/alerts/${id}/ack`,{method:'POST'}).then(r=>r.json()).then(resp=>{ if(!resp.success){ if(card) card.classList.remove('processing'); if(btn) btn.disabled=false; alert(resp.message||'确认失败'); return; } if(card){ card.classList.add('acknowledged'); setTimeout(()=>{ card.remove(); fetchAlerts(); },320); } }).catch(e=>{ if(card) card.classList.remove('processing'); if(btn) btn.disabled=false; alert('确认错误: '+e.message); }); }
  function ignoreAlert(id, btn){ if(!id) return; const card=document.querySelector(`.alert-card[data-alert-id='${id}']`); if(card) card.classList.add('processing'); if(btn) btn.disabled=true; fetch(`/data/api/alerts/${id}/ignore`,{method:'POST'}).then(r=>r.json()).then(resp=>{ if(!resp.success){ if(card) card.classList.remove('processing'); if(btn) btn.disabled=false; alert(resp.message||'忽略失败'); return; } if(card){ card.classList.add('ignored'); setTimeout(()=>{ card.remove(); fetchAlerts(); },220); } }).catch(e=>{ if(card) card.classList.remove('processing'); if(btn) btn.disabled=false; alert('忽略错误: '+e.message); }); }
  document.addEventListener('DOMContentLoaded', init);
  Object.assign(global,{ fetchAlerts, ackAlert, ignoreAlert });
})(window);

